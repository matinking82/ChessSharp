@using ChessKing.Models.DataStructures.GameTree
@using ChessKing.Models

<span class="move-tree-item" @onclick="clicked">
    @if (node.PieceName == "p" || node.PieceName == "P")
    {
        if (node.StartSquare.ElementAt(0) == node.EndSquare.ElementAt(0))
        {
            @node.EndSquare
        }
        else
        {
            @(node.StartSquare.ElementAt(0) + node.EndSquare)
        }
    }
    else
    {
        @(node.PieceName?.ToUpper() + node.StartSquare + node.EndSquare)
    }
</span>

@if (node.Children.Count >= 2)
{
    var copyHead = node.Children.Head;
    @for (int i = 1; i < node.Children.Count; i++)
    {
        copyHead = copyHead.Next;

        <span>(</span>
        <MovesButton node="copyHead.Data" board="board" update="update"></MovesButton>
        <span>)</span>
    }

}

@if (node.Children.Head != null)
{
    <MovesButton node="node.Children.Head.Data" board="board" update="update"></MovesButton>
}

@code {
    [Parameter]
    public GameTreeNode node { get; set; }

    [Parameter]
    public Board board { get; set; }

    [Parameter]
    public EventCallback update { get; set; }

    async void clicked()
    {
        board.SetActivePosition(node);
        await update.InvokeAsync();
    }
}
